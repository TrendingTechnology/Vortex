/**
 *    Copyright 2019 Yazan Tarifi
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

buildscript {
    ext.kotlin_version = '1.3.31'

    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url "https://maven.google.com" }
        maven { url "https://dl.bintray.com/drummer-aidan/maven/" }
        maven { url 'https://repo.spring.io/libs-snapshot' }
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'https://repo.spring.io/snapshot' }
        maven { url 'https://repo.spring.io/milestone' }
    }

    dependencies {
        classpath RootLibs.AndroidGradle
        classpath RootLibs.Kotlin
        classpath RootLibs.Bintray
        classpath RootLibs.SpringBootPluginV2
        classpath RootLibs.AndroidMaven
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }


}

plugins {
    id("de.fayard.buildSrcVersions") version "0.3.2"
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url "https://maven.google.com" }
        maven { url "https://dl.bintray.com/drummer-aidan/maven/" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
}

allprojects {
    apply plugin: "maven-publish"
}

apply plugin: Plugins.JavaPlugin
apply plugin: Plugins.IdeaPlugin
apply plugin: Plugins.AndroidMavenPlugin


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

/**
 * Apply Checkstyle To Project To manage The SourceCode {PMD , CHECKSTYLE}* */
apply from: "tools/checkstyle.gradle"
apply from: "tools/pmd.gradle"
apply from: "tools/SpringDependencies.gradle"

/**
 * Library Info
 */

ext {
    Group = "com.yazan98.vortex"
    Version = "0.0.1"
    PackagingType = "arr"
    LibraryName = "Vortex"
    GithubUrl = "https://www.github.com/Yazan98/Vortex"
    GitUrl = "https://www.github.com/Yazan98/Vortex.git"
    licenseName = "Apache-2.0"
    licenseUrl = "http://www.apache.org/licenses/LICENSE-2.0"
    distribution = 'repo'
    GithubIssuesUrl = "https://www.github.com/Yazan98/River-Core/issues"
    DeveloperID = "yt98"
    DeveloperName = "Yazan Tarifi"
    DeveloperEmail = ""
    Description = "Vortex Android Applications"

    bintrayUsername = "yt98"
    bintrayApiKey = ""

    VortexCore = "vortex-core-ktx"
    VortexCoreDescription = "Base Code To Build Vortex Applications Based On RxJava 2"

    VortexD = "vortex-data-ktx"
    VortexDDescription = "Vortex Android Data Layer To Handle Network Requests"

    VortexExtras = "vortex-extras-ktx"
    VortexExtrasDescription = "Vortex Android UI Layer With Many Operations"

    VortexVm = "vortex-viewmodel-ktx"
    VortexVmDescription = "Vortex Android UI Layer For ViewModel Implementation"

    VortexVmCore = "vortex-viewmodel-core-ktx"
    VortexVmCoreDescription = "Vortex Android UI Layer For ViewModel Core Configuration"

    VortexViper = "vortex-viper-ktx"
    VortexViperDescription = "Vortex Android UI Layer For ViewModel Implementation"
}
